AWSTemplateFormatVersion: "2010-09-09"
Description: >-
  This creates the necessary components to deploy the Account Management
  Frontend onto ECS Fargate.
  Account Management Frontend can be invoked via the CloudFront Distribution,
  use the CloudFrontDistributionEndpoint URL exported by this stack.
  The ingress route in summary is:
  CloudFront -> WAF -> API Gateway -> VPC link -> Private ALB -> ECS Fargate
Transform:
  - AWS::Serverless-2016-10-31

# Must deploy the container on it's own first, having a successful cluster/container spun up
# Then only do we configure the blue/green deployment on the second run, not making any infrastructure related changes

#  - AWS::CodeDeployBlueGreen
#
#Hooks:
#  CodeDeployBlueGreenHook:
#    Properties:
#      TrafficRoutingConfig:
#        Type: TimeBasedCanary
#        TimeBasedCanary:
#          StepPercentage: 15
#          BakeTimeMins: 5
#      Applications:
#        - Target:
#            Type: AWS::ECS::Service
#            LogicalID: ContainerService
#          ECSAttributes:
#            TaskDefinitions:
#              - BlueTaskDefinition
#              - GreenTaskDefinition
#            TaskSets:
#              - BlueTaskSet
#              - GreenTaskSet
#            TrafficRouting:
#              ProdTrafficRoute:
#                Type: AWS::ElasticLoadBalancingV2::Listener
#                LogicalID: ApplicationLoadBalancerListenerHTTPS
#              TargetGroups:
#                - ApplicationLoadBalancerTargetGroupBlue
#                - ApplicationLoadBalancerTargetGroupGreen
#    Type: AWS::CodeDeploy::BlueGreen

Parameters:
  Environment:
    Description: The name of the environment to deploy to
    Type: String
    AllowedValues:
      - "dev"
      - "build"
      - "staging"
      - "integration"
      - "production"
    Default: dev
  VpcStackName:
    Description: The name of the stack that defines the VPC in which this container will run.
    Type: String
  AlertingStackName:
    Description: The name of the stack that defines the Alerting resources
    Type: String
    Default: platform-alerting
  BackendStackName:
    Description: The name of the backend stack
    Type: String
    Default: account-mgmt-backend
  StubsStackName:
    Description: The name of the stubs stack
    Type: String
    Default: account-mgmt-stubs
  ContainerPort:
    Description: The port on which the container is running
    Type: Number
    Default: 6001
  ECSClusterMaxCapacity:
    Description: The maximum capacity of the ECS Cluster Auto Scaling Target
    Type: Number
    Default: 6
  ProductTagValue:
    Description: Value for the Product Tag
    Type: String
    Default: GOV.UK Sign In
  OwnerTagValue:
    Description: Value for the Owner Tag
    Type: String
    Default: govuk-accounts-tech@digital.cabinet-office.gov.uk
  SourceTagValue:
    Description: Value for the Source Tag
    Type: String
    Default: govuk-one-login/di-account-management-frontend/deploy/template.yaml
  SystemTagValue:
    Description: Value for the System Tag
    Type: String
    Default: Accounts
  PermissionsBoundary:
    Description: The ARN of the permissions boundary to apply when creating IAM roles
    Type: String
    Default: none
  ServiceStoreTableName:
    Type: String
    Default: user_services
  ActivityLogTableName:
    Type: String
    Default: activity_log
  CodeSigningConfigArn:
    Type: String
    Description: >
      The ARN of the Code Signing Config to use, provided by the deployment pipeline
    Default: "none"

Conditions:
  IsProduction: !Equals [!Ref Environment, production]
  IsNotDevelopment: !Or
    - !Equals [!Ref Environment, build]
    - !Equals [!Ref Environment, staging]
    - !Equals [!Ref Environment, integration]
    - !Equals [!Ref Environment, production]
  UsePermissionsBoundary:
    Fn::Not:
      - Fn::Equals:
          - !Ref PermissionsBoundary
          - "none"
  UseStubServices: !Or
    - !Equals [!Ref Environment, build]
    - !Equals [!Ref Environment, dev]
  UseCodeSigning: !Not [!Equals [none, !Ref CodeSigningConfigArn]]
  ExportLogsToSplunk:
    Fn::Or:
      - !Equals [!Ref Environment, staging]
      - !Equals [!Ref Environment, integration]
      - !Equals [!Ref Environment, production]

Mappings:
  # see https://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-access-logs.html
  ElasticLoadBalancerAccountIds:
    eu-west-2:
      AccountId: 652711504416
  EnvironmentVariables:
    ### These environment variables are referenced further down the file.
    ### Please ensure that any variables defined for an environment are defined for _all_ environments.
    dev:
      NODEENV: "production"
      APIBASEURL: "https://oidc.staging.account.gov.uk"
      AMAPIBASEURL: "https://manage.staging.account.gov.uk"
      BASEURL: "home.dev.account.gov.uk"
      SESSIONEXPIRY: "7200000"
      AMYOURACCOUNTURL: "https://www.staging.publishing.service.gov.uk/account/home"
      GOVACCOUNTSPUBLISHINGAPIURL: "https://account-api.staging.publishing.service.gov.uk"
      SUPPORTACTIVITYLOG: "1"
      SUPPORTLANGUAGECY: "1"
      AUTHFRONTENDURL: "signin.staging.account.gov.uk"
      ANALYTICSCOOKIEDOMAIN: "dev.account.gov.uk"
      SERVICEDOMAIN: "dev.account.gov.uk"
      LOGSLEVEL: "debug"
      SUPPORTTRIAGEPAGE: "1"
      WEBCHATSOURCEURL: "https://dev-chat-loader.smartagent.app"
      SUPPORTWEBCHATCONTACT: "1"
      SUPPORTPHONECONTACT: "1"
      SHOWCONTACTGUIDANCE: "1"
      SHOWCONTACTEMERGENCYMESSAGE: "0"
      CONTACTEMAILSERVICEURL: "https://signin.staging.account.gov.uk/contact-us-from-triage-page"
      dynatraceSecretArn: arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceNonProductionVariables
      METHODMANAGEMENTBASEURL: "https://method-management-v1-stub.home.dev.account.gov.uk"
      SUPPORTMETHODMANAGEMENT: "1"
      UNIVERSALANALYTICSGTMCONTAINERID: "GTM-TK92W68"
      GOOGLEANALYTICS4GTMCONTAINERID: "GTM-KD86CMZ"
      GA4DISABLED: "false"
      UADISABLED: "false"
      SUPPORTCHANGEMFA: "1"
      ACCESSIBILITYSTATEMENTURL: "https://signin.account.gov.uk/accessibility-statement"
      LANGUAGETOGGLE: 1
    build:
      NODEENV: "production"
      APIBASEURL: "https://oidc.build.account.gov.uk"
      AMAPIBASEURL: "https://manage.build.account.gov.uk"
      BASEURL: "home.build.account.gov.uk"
      SESSIONEXPIRY: "7200000"
      AMYOURACCOUNTURL: "https://www.staging.publishing.service.gov.uk/account/home"
      GOVACCOUNTSPUBLISHINGAPIURL: "https://account-api.staging.publishing.service.gov.uk"
      SUPPORTACTIVITYLOG: "1"
      SUPPORTLANGUAGECY: "1"
      AUTHFRONTENDURL: "signin.build.account.gov.uk"
      ANALYTICSCOOKIEDOMAIN: "build.account.gov.uk"
      SERVICEDOMAIN: "build.account.gov.uk"
      LOGSLEVEL: "debug"
      SUPPORTTRIAGEPAGE: "1"
      WEBCHATSOURCEURL: "https://uat-chat-loader.smartagent.app"
      SUPPORTWEBCHATCONTACT: "0"
      SUPPORTPHONECONTACT: "0"
      SHOWCONTACTGUIDANCE: "1"
      SHOWCONTACTEMERGENCYMESSAGE: "0"
      CONTACTEMAILSERVICEURL: "https://signin.staging.account.gov.uk/contact-us-from-triage-page"
      METHODMANAGEMENTBASEURL: "https://method-management-v1-stub.home.build.account.gov.uk"
      SUPPORTMETHODMANAGEMENT: "0"
      SUPPORTCHANGEMFA: "0"
      dynatraceSecretArn: arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceNonProductionVariables
      ACCESSIBILITYSTATEMENTURL: "https://signin.account.gov.uk/accessibility-statement"
      UNIVERSALANALYTICSGTMCONTAINERID: "GTM-TK92W68"
      GOOGLEANALYTICS4GTMCONTAINERID: "GTM-KD86CMZ"
      GA4DISABLED: "false"
      UADISABLED: "false"
      LANGUAGETOGGLE: 0
    staging:
      NODEENV: "production"
      APIBASEURL: "https://oidc.staging.account.gov.uk"
      AMAPIBASEURL: "https://manage.staging.account.gov.uk"
      BASEURL: "home.staging.account.gov.uk"
      SESSIONEXPIRY: "7200000"
      AMYOURACCOUNTURL: "https://www.staging.publishing.service.gov.uk/account/home"
      GOVACCOUNTSPUBLISHINGAPIURL: "https://account-api.staging.publishing.service.gov.uk"
      SUPPORTACTIVITYLOG: "1"
      SUPPORTLANGUAGECY: "1"
      AUTHFRONTENDURL: "signin.staging.account.gov.uk"
      ANALYTICSCOOKIEDOMAIN: "staging.account.gov.uk"
      SERVICEDOMAIN: "staging.account.gov.uk"
      LOGSLEVEL: "info"
      SUPPORTTRIAGEPAGE: "1"
      WEBCHATSOURCEURL: "https://uat-chat-loader.smartagent.app"
      SUPPORTWEBCHATCONTACT: "1"
      SUPPORTPHONECONTACT: "1"
      SHOWCONTACTGUIDANCE: "1"
      SHOWCONTACTEMERGENCYMESSAGE: "0"
      CONTACTEMAILSERVICEURL: "https://signin.staging.account.gov.uk/contact-us-from-triage-page"
      METHODMANAGEMENTBASEURL: "https://method-management-v1-stub.home.staging.account.gov.uk"
      SUPPORTMETHODMANAGEMENT: "0"
      SUPPORTCHANGEMFA: "0"
      dynatraceSecretArn: arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceNonProductionVariables
      UNIVERSALANALYTICSGTMCONTAINERID: "GTM-TK92W68"
      GOOGLEANALYTICS4GTMCONTAINERID: "GTM-KD86CMZ"
      GA4DISABLED: "true"
      UADISABLED: "false"
      ACCESSIBILITYSTATEMENTURL: "https://signin.account.gov.uk/accessibility-statement"
      LANGUAGETOGGLE: 0
    integration:
      NODEENV: "production"
      APIBASEURL: "https://oidc.integration.account.gov.uk"
      AMAPIBASEURL: "https://manage.integration.account.gov.uk"
      BASEURL: "home.integration.account.gov.uk"
      SESSIONEXPIRY: "7200000"
      AMYOURACCOUNTURL: "https://www.integration.publishing.service.gov.uk/account/home"
      GOVACCOUNTSPUBLISHINGAPIURL: "https://account-api.integration.publishing.service.gov.uk"
      SUPPORTACTIVITYLOG: "1"
      SUPPORTLANGUAGECY: "1"
      AUTHFRONTENDURL: "signin.integration.account.gov.uk"
      ANALYTICSCOOKIEDOMAIN: "integration.account.gov.uk"
      SERVICEDOMAIN: "integration.account.gov.uk"
      LOGSLEVEL: "info"
      SUPPORTTRIAGEPAGE: "1"
      WEBCHATSOURCEURL: "https://uat-chat-loader.smartagent.app"
      SUPPORTWEBCHATCONTACT: "1"
      SUPPORTPHONECONTACT: "1"
      SHOWCONTACTGUIDANCE: "1"
      SHOWCONTACTEMERGENCYMESSAGE: "0"
      METHODMANAGEMENTBASEURL: "https://method-management-v1-stub.home.integration.account.gov.uk"
      SUPPORTMETHODMANAGEMENT: "0"
      SUPPORTCHANGEMFA: "0"
      CONTACTEMAILSERVICEURL: "https://signin.integration.account.gov.uk/contact-us-from-triage-page"
      dynatraceSecretArn: arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceNonProductionVariables
      UNIVERSALANALYTICSGTMCONTAINERID: "TBD"
      GOOGLEANALYTICS4GTMCONTAINERID: "TBD"
      GA4DISABLED: "true"
      UADISABLED: "true"
      ACCESSIBILITYSTATEMENTURL: "https://signin.account.gov.uk/accessibility-statement"
      LANGUAGETOGGLE: 0
    production:
      NODEENV: "production"
      APIBASEURL: "https://oidc.account.gov.uk"
      AMAPIBASEURL: "https://manage.account.gov.uk"
      BASEURL: "home.account.gov.uk"
      SESSIONEXPIRY: "7200000"
      AMYOURACCOUNTURL: "https://www.gov.uk/account/home"
      GOVACCOUNTSPUBLISHINGAPIURL: "https://account-api.publishing.service.gov.uk"
      SUPPORTACTIVITYLOG: "1"
      SUPPORTLANGUAGECY: "1"
      AUTHFRONTENDURL: "signin.account.gov.uk"
      ANALYTICSCOOKIEDOMAIN: "account.gov.uk"
      SERVICEDOMAIN: "account.gov.uk"
      LOGSLEVEL: "info"
      SUPPORTTRIAGEPAGE: "1"
      WEBCHATSOURCEURL: "https://chat-loader.smartagent.app"
      SUPPORTWEBCHATCONTACT: "0"
      SUPPORTPHONECONTACT: "1"
      SHOWCONTACTGUIDANCE: "1"
      SHOWCONTACTEMERGENCYMESSAGE: "0"
      METHODMANAGEMENTBASEURL: ""
      SUPPORTMETHODMANAGEMENT: "0"
      SUPPORTCHANGEMFA: "0"
      CONTACTEMAILSERVICEURL: "https://signin.account.gov.uk/contact-us-from-triage-page"
      dynatraceSecretArn: arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceProductionVariables
      UNIVERSALANALYTICSGTMCONTAINERID: "GTM-TT5HDKV"
      GOOGLEANALYTICS4GTMCONTAINERID: "GTM-K4PBJH3"
      GA4DISABLED: "true"
      UADISABLED: "false"
      ACCESSIBILITYSTATEMENTURL: "https://signin.account.gov.uk/accessibility-statement"
      LANGUAGETOGGLE: 0

Resources:
  #
  # ECS Service
  #

  ECSCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: !Sub "${AWS::StackName}-ECSCluster"
      CapacityProviders: !If
        - IsProduction
        - - "FARGATE"
        - - "FARGATE_SPOT"
      DefaultCapacityProviderStrategy:
        - CapacityProvider: !If [IsProduction, "FARGATE", "FARGATE_SPOT"]
          Weight: 1
      ClusterSettings:
        - Name: containerInsights
          Value: enabled
      Tags:
        - Key: Product
          Value: !Ref ProductTagValue
        - Key: System
          Value: !Ref SystemTagValue
        - Key: Environment
          Value: !Ref Environment
        - Key: Name
          Value: !Sub "${AWS::StackName}-ECSCluster"
        - Key: Owner
          Value: !Ref OwnerTagValue
        - Key: Source
          Value: !Ref SourceTagValue
    DependsOn: ApplicationLoadBalancerListenerHTTPS

  ExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${AWS::StackName}-ExecutionRole"
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy"
      Policies:
        - PolicyName: PullImage
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource:
                  - !GetAtt TaskLogGroup.Arn
                  - !Sub "${TaskLogGroup.Arn}:*"
        - PolicyName: !Sub "${AWS::StackName}-DynatraceSecretsPolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - secretsmanager:GetSecretValue
                  - secretsmanager:ListSecrets
                Resource:
                  - arn:aws:secretsmanager:eu-west-2:216552277552:secret:*
              - Effect: Allow
                Action:
                  - kms:Decrypt
                Resource:
                  - arn:aws:kms:eu-west-2:216552277552:key/*
      PermissionsBoundary: !If
        - UsePermissionsBoundary
        - !Ref PermissionsBoundary
        - !Ref AWS::NoValue
      Tags:
        - Key: Product
          Value: !Ref ProductTagValue
        - Key: System
          Value: !Ref SystemTagValue
        - Key: Environment
          Value: !Ref Environment
        - Key: Name
          Value: !Sub "${AWS::StackName}-ExecutionRole"
        - Key: Owner
          Value: !Ref OwnerTagValue
        - Key: Source
          Value: !Ref SourceTagValue

  TaskRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${AWS::StackName}-TaskRole"
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: !Sub "${AWS::StackName}-TaskRolePolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "sns:Publish"
                Resource:
                  - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:UserAccountDeletion"
              - Effect: Allow
                Action:
                  - "kms:Decrypt"
                Resource:
                  - Fn::ImportValue: !Sub "${BackendStackName}-GeneratorKey"
              - Effect: Allow
                Action:
                  - "sns:Publish"
                Resource:
                  - !Sub "arn:aws:sns:${AWS::Region}:${AWS::AccountId}:SuspiciousActivity"
              - Effect: Allow
                Action:
                  - "ssm:GetParameters"
                Resource:
                  - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${AWS::StackName}/*"
                  - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${BackendStackName}/SNS/DeleteTopic/ARN"
                  - !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/${StubsStackName}/Stub/AccountManagement/Endpoint"
              - Effect: Allow
                Action:
                  - "secretsmanager:GetSecretValue"
                Resource:
                  - !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:/${AWS::StackName}/Config/Publishing/API/Key"
                  - !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:/${AWS::StackName}/Config/Session/Secret"
                  - !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:/${BackendStackName}/Config/Session/Secret"
              - Effect: Allow
                Action:
                  - dynamodb:Query
                  - dynamodb:GetItem
                Resource:
                  - !Sub "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${ServiceStoreTableName}"
                  - !Sub "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${ActivityLogTableName}"
              - Effect: Allow
                Action:
                  - dynamodb:DescribeTable
                  - dynamodb:GetItem
                  - dynamodb:PutItem
                  - dynamodb:DeleteItem
                  - dynamodb:Query
                  - dynamodb:Scan
                  - dynamodb:UpdateItem
                Resource:
                  - !GetAtt SessionsDynamoDB.Arn
                  - !Sub "${SessionsDynamoDB.Arn}/index/users-sessions"
              - Effect: Allow
                Action:
                  - "kms:Sign"
                  - "kms:GetPublicKey"
                Resource: !Join
                  - ""
                  - - !Sub "arn:aws:kms:${AWS::Region}:${AWS::AccountId}:key/"
                    - !Sub "{{resolve:ssm:/${AWS::StackName}/KMS/JwtSigningKey/Id}}"
              - Effect: Allow
                Action:
                  - "kms:GenerateDataKey*"
                  - "kms:Decrypt"
                Resource:
                  - !Sub "arn:aws:kms:${AWS::Region}:${AWS::AccountId}:key/{{resolve:ssm:/${BackendStackName}/KMS/SnsKmsKey/ID}}"
                  - !Sub "arn:aws:kms:${AWS::Region}:${AWS::AccountId}:key/{{resolve:ssm:/${BackendStackName}/KMS/DatabaseKmsKey/ID}}"
                  - !GetAtt DynamoDBKmsKey.Arn
              - Effect: Allow
                Action:
                  - kms:Decrypt
                  - kms:GenerateDataKey*
                  - kms:ReEncrypt*
                Resource: !Sub "{{resolve:ssm:/${BackendStackName}/KMS/AuditQueueKey/ARN}}"
              - Effect: Allow
                Action: sqs:SendMessage
                Resource: !Sub "{{resolve:ssm:/${BackendStackName}/SQS/AuditQueue/ARN}}"
        - PolicyName: !Sub "${AWS::StackName}-DynatraceSecretsPolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "secretsmanager:GetSecretValue"
                Resource:
                  - !Sub "arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceNonProductionVariables"
                  - !Sub "arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceProductionVariables"
              - Effect: Allow
                Action:
                  - "kms:Decrypt"
                Resource:
                  - !Sub "arn:aws:kms:eu-west-2:216552277552:key/*"

      PermissionsBoundary: !If
        - UsePermissionsBoundary
        - !Ref PermissionsBoundary
        - !Ref AWS::NoValue
      Tags:
        - Key: Product
          Value: !Ref ProductTagValue
        - Key: System
          Value: !Ref SystemTagValue
        - Key: Environment
          Value: !Ref Environment
        - Key: Name
          Value: !Sub "${AWS::StackName}-TaskRole"
        - Key: Owner
          Value: !Ref OwnerTagValue
        - Key: Source
          Value: !Ref SourceTagValue

  ECSClusterNameParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Description: !Sub "The name of the ${AWS::StackName} ECS cluster"
      Name: !Sub "/${AWS::StackName}/ECS/Cluster"
      Type: String
      Value: !Ref ECSCluster
      Tags:
        Product: !Ref ProductTagValue
        System: !Ref SystemTagValue
        Environment: !Ref Environment
        Owner: !Ref OwnerTagValue
        Source: !Ref SourceTagValue

  ContainerService:
    Type: AWS::ECS::Service
    Properties:
      Cluster: !Ref ECSCluster
      DeploymentController:
        Type: EXTERNAL
      PropagateTags: SERVICE
      Tags:
        - Key: Product
          Value: !Ref ProductTagValue
        - Key: System
          Value: !Ref SystemTagValue
        - Key: Environment
          Value: !Ref Environment
        - Key: Name
          Value: !Sub "${AWS::StackName}-ContainerService"
        - Key: Owner
          Value: !Ref OwnerTagValue
        - Key: Source
          Value: !Ref SourceTagValue
    DependsOn: ApplicationLoadBalancerListenerHTTPS

  ContainerServiceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: !Sub "Security Group to access the ${AWS::StackName} Container Service"
      GroupName: !Join
        - "-"
        - - !Ref AWS::StackName
          - ContainerService
          - Fn::Select:
              - 4
              - Fn::Split:
                  - "-"
                  - Fn::Select:
                      - 2
                      - Fn::Split:
                          - "/"
                          - Ref: AWS::StackId
      SecurityGroupIngress:
        - Description: !Sub "Allow traffic from the load balancer on port ${ContainerPort}"
          SourceSecurityGroupId: !GetAtt ApplicationLoadBalancerSecurityGroup.GroupId
          IpProtocol: tcp
          FromPort: !Ref ContainerPort
          ToPort: !Ref ContainerPort
      VpcId:
        Fn::ImportValue: !Sub "${VpcStackName}-VpcId"
      Tags:
        - Key: Product
          Value: !Ref ProductTagValue
        - Key: System
          Value: !Ref SystemTagValue
        - Key: Environment
          Value: !Ref Environment
        - Key: Name
          Value: !Sub "${AWS::StackName}-ContainerServiceSecurityGroup"
        - Key: Owner
          Value: !Ref OwnerTagValue
        - Key: Source
          Value: !Ref SourceTagValue

  #
  # Fargate tasks
  #

  BlueTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      ContainerDefinitions:
        - Essential: true
          Image: "CONTAINER-IMAGE-PLACEHOLDER"
          Name: !Sub "${AWS::StackName}-BlueTaskDefinition"
          PortMappings:
            - ContainerPort: !Ref ContainerPort
              Protocol: tcp
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref TaskLogGroup
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: "ecs"
          Environment:
            - Name: "NODE_ENV"
              Value:
                !FindInMap [EnvironmentVariables, !Ref Environment, NODEENV]
            - Name: "APP_ENV"
              Value: !Sub "${Environment}"
            - Name: "API_BASE_URL"
              Value:
                !If [
                  UseStubServices,
                  !Sub "https://{{resolve:ssm:/${StubsStackName}/Stub/OIDC}}",
                  !FindInMap [
                    EnvironmentVariables,
                    !Ref Environment,
                    APIBASEURL,
                  ],
                ]
            - Name: "AM_API_BASE_URL"
              Value:
                !If [
                  UseStubServices,
                  !Sub "https://{{resolve:ssm:/${StubsStackName}/Stub/AccountManagement/Endpoint}}",
                  !FindInMap [
                    EnvironmentVariables,
                    !Ref Environment,
                    AMAPIBASEURL,
                  ],
                ]
            - Name: "SUPPORT_ACTIVITY_LOG"
              Value:
                !FindInMap [
                  EnvironmentVariables,
                  !Ref Environment,
                  SUPPORTACTIVITYLOG,
                ]
            - Name: "BASE_URL"
              Value:
                !FindInMap [EnvironmentVariables, !Ref Environment, BASEURL]
            - Name: "OIDC_CLIENT_ID"
              Value: !Sub "{{resolve:ssm:/${AWS::StackName}/Config/OIDC/Client/Id}}"
            - Name: "OIDC_CLIENT_SCOPES"
              Value: "openid phone email am offline_access govuk-account"
            - Name: "SESSION_EXPIRY"
              Value:
                !FindInMap [
                  EnvironmentVariables,
                  !Ref Environment,
                  SESSIONEXPIRY,
                ]
            - Name: "SESSION_SECRET"
              Value: !Sub "{{resolve:secretsmanager:${SessionSecret}}}"
            - Name: "AM_YOUR_ACCOUNT_URL"
              Value:
                !FindInMap [
                  EnvironmentVariables,
                  !Ref Environment,
                  AMYOURACCOUNTURL,
                ]
            - Name: "GTM_ID"
              Value: !Sub "{{resolve:ssm:/${AWS::StackName}/Config/GTM/Id}}"
            - Name: "GOV_ACCOUNTS_PUBLISHING_API_URL"
              Value:
                !FindInMap [
                  EnvironmentVariables,
                  !Ref Environment,
                  GOVACCOUNTSPUBLISHINGAPIURL,
                ]
            - Name: "GOV_ACCOUNTS_PUBLISHING_API_TOKEN"
              Value: !Sub "{{resolve:secretsmanager:/${AWS::StackName}/Config/Publishing/API/Key}}"
            - Name: "SUPPORT_LANGUAGE_CY"
              Value:
                !FindInMap [
                  EnvironmentVariables,
                  !Ref Environment,
                  SUPPORTLANGUAGECY,
                ]
            - Name: "AUTH_FRONTEND_URL"
              Value:
                !FindInMap [
                  EnvironmentVariables,
                  !Ref Environment,
                  AUTHFRONTENDURL,
                ]
            - Name: "ANALYTICS_COOKIE_DOMAIN"
              Value:
                !FindInMap [
                  EnvironmentVariables,
                  !Ref Environment,
                  ANALYTICSCOOKIEDOMAIN,
                ]
            - Name: "SESSION_STORE_TABLE_NAME"
              Value: !Ref SessionsDynamoDB
            - Name: "KMS_KEY_ID"
              Value: !Sub "{{resolve:ssm:/${AWS::StackName}/KMS/JwtSigningKey/Id}}"
            - Name: "SERVICE_DOMAIN"
              Value:
                !FindInMap [
                  EnvironmentVariables,
                  !Ref Environment,
                  SERVICEDOMAIN,
                ]
            - Name: "LOGS_LEVEL"
              Value:
                !FindInMap [EnvironmentVariables, !Ref Environment, LOGSLEVEL]
            - Name: "DELETE_TOPIC_ARN"
              Value: !Sub "{{resolve:ssm:/${BackendStackName}/SNS/DeleteTopic/ARN}}"
            - Name: "SUSPICIOUS_ACTIVITY_TOPIC_ARN"
              Value: !Sub "{{resolve:ssm:/${BackendStackName}/SNS/SuspiciousActivity/ARN}}"
            - Name: "SERVICE_STORE_TABLE_NAME"
              Value: !Ref ServiceStoreTableName
            - Name: "ACTIVITY_LOG_STORE_TABLE_NAME"
              Value: !Ref ActivityLogTableName
            - Name: "SUPPORT_TRIAGE_PAGE"
              Value:
                !FindInMap [
                  EnvironmentVariables,
                  !Ref Environment,
                  SUPPORTTRIAGEPAGE,
                ]
            - Name: "WEBCHAT_SOURCE_URL"
              Value:
                !FindInMap [
                  EnvironmentVariables,
                  !Ref Environment,
                  WEBCHATSOURCEURL,
                ]
            - Name: "SUPPORT_WEBCHAT_CONTACT"
              Value:
                !FindInMap [
                  EnvironmentVariables,
                  !Ref Environment,
                  SUPPORTWEBCHATCONTACT,
                ]
            - Name: "SUPPORT_PHONE_CONTACT"
              Value:
                !FindInMap [
                  EnvironmentVariables,
                  !Ref Environment,
                  SUPPORTPHONECONTACT,
                ]
            - Name: "SHOW_CONTACT_GUIDANCE"
              Value:
                !FindInMap [
                  EnvironmentVariables,
                  !Ref Environment,
                  SHOWCONTACTGUIDANCE,
                ]
            - Name: "SHOW_CONTACT_EMERGENCY_MESSAGE"
              Value:
                !FindInMap [
                  EnvironmentVariables,
                  !Ref Environment,
                  SHOWCONTACTEMERGENCYMESSAGE,
                ]
            - Name: "CONTACT_EMAIL_SERVICE_URL"
              Value:
                !FindInMap [
                  EnvironmentVariables,
                  !Ref Environment,
                  CONTACTEMAILSERVICEURL,
                ]
            - Name: "SUPPORT_METHOD_MANAGEMENT"
              Value:
                !FindInMap [
                  EnvironmentVariables,
                  !Ref Environment,
                  SUPPORTMETHODMANAGEMENT,
                ]
            - Name: "SUPPORT_CHANGE_MFA"
              Value:
                !FindInMap [
                  EnvironmentVariables,
                  !Ref Environment,
                  SUPPORTCHANGEMFA,
                ]
            - Name: "METHOD_MANAGEMENT_BASE_URL"
              Value:
                !FindInMap [
                  EnvironmentVariables,
                  !Ref Environment,
                  METHODMANAGEMENTBASEURL,
                ]
            - Name: "AUDIT_QUEUE_URL"
              Value: !Sub "{{resolve:ssm:/${BackendStackName}/SQS/AuditQueue/URL}}"
            - Name: "AUDIT_QUEUE_DLQ_URL"
              Value: !Ref TxMAPublishErrorDeadLetterQueue
            - Name: "GENERATOR_KEY_ARN"
              Value: !ImportValue
                "Fn::Sub": "${BackendStackName}-GeneratorKey"
            - Name: "WRAPPING_KEY_ARN"
              Value: !ImportValue
                "Fn::Sub": "${BackendStackName}-WrappingKey"
            - Name: "ACCOUNT_ID"
              Value: !Sub "${AWS::AccountId}"
            - Name: "ENVIRONMENT"
              Value: !Ref Environment
            - Name: "VERIFY_ACCESS_VALUE"
              Value: !Sub "{{resolve:secretsmanager:/${BackendStackName}/Config/Storage/VerificationSecret}}"
            - Name: "UNIVERSAL_ANALYTICS_GTM_CONTAINER_ID"
              Value:
                !FindInMap [
                  EnvironmentVariables,
                  !Ref Environment,
                  UNIVERSALANALYTICSGTMCONTAINERID,
                ]
            - Name: "GOOGLE_ANALYTICS_4_GTM_CONTAINER_ID"
              Value:
                !FindInMap [
                  EnvironmentVariables,
                  !Ref Environment,
                  GOOGLEANALYTICS4GTMCONTAINERID,
                ]
            - Name: "GA4_DISABLED"
              Value:
                !FindInMap [EnvironmentVariables, !Ref Environment, GA4DISABLED]
            - Name: "UA_DISABLED"
              Value:
                !FindInMap [EnvironmentVariables, !Ref Environment, UADISABLED]
            - Name: "ACCESSIBILITY_STATEMENT_URL"
              Value:
                !FindInMap [
                  EnvironmentVariables,
                  !Ref Environment,
                  ACCESSIBILITYSTATEMENTURL,
                ]
            - Name: "LANGUAGE_TOGGLE"
              Value:
                !FindInMap [
                  EnvironmentVariables,
                  !Ref Environment,
                  LANGUAGETOGGLE,
                ]
          Secrets:
            - Name: DT_TENANT
              ValueFrom: !Join
                - ""
                - - !FindInMap [
                      EnvironmentVariables,
                      !Ref Environment,
                      dynatraceSecretArn,
                    ]
                  - ":DT_TENANT::"
            - Name: DT_TENANTTOKEN
              ValueFrom: !Join
                - ""
                - - !FindInMap [
                      EnvironmentVariables,
                      !Ref Environment,
                      dynatraceSecretArn,
                    ]
                  - ":DT_TENANTTOKEN::"
            - Name: DT_CONNECTION_POINT
              ValueFrom: !Join
                - ""
                - - !FindInMap [
                      EnvironmentVariables,
                      !Ref Environment,
                      dynatraceSecretArn,
                    ]
                  - ":DT_CONNECTION_POINT::"

      Cpu: 1024
      Memory: 4096
      ExecutionRoleArn: !GetAtt ExecutionRole.Arn
      TaskRoleArn: !GetAtt TaskRole.Arn
      Family: !Sub "${AWS::StackName}-BlueTaskDefinition"
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      Tags:
        - Key: Product
          Value: !Ref ProductTagValue
        - Key: System
          Value: !Ref SystemTagValue
        - Key: Environment
          Value: !Ref Environment
        - Key: Name
          Value: !Sub "${AWS::StackName}-BlueTaskDefinition"
        - Key: Owner
          Value: !Ref OwnerTagValue
        - Key: Source
          Value: !Ref SourceTagValue
    DependsOn: SessionSecret

  TxMAPublishErrorDeadLetterQueue:
    Type: AWS::SQS::Queue
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      MessageRetentionPeriod: 1209600
      KmsMasterKeyId: !GetAtt QueueKmsKey.Arn

  QueueKmsKey:
    Type: AWS::KMS::Key
    Properties:
      EnableKeyRotation: true
      KeyPolicy:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
            Action: kms:*
            Resource:
              - "*"

  QueueKmsKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: !Sub "alias/${AWS::StackName}/${Environment}/QueueKmsKey"
      TargetKeyId: !Ref QueueKmsKey

  TaskLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/ecs/${AWS::StackName}/server"
      RetentionInDays: 30
      KmsKeyId: !GetAtt LoggingKmsKey.Arn

  TaskLogGroupCSLSSubscription:
    Condition: ExportLogsToSplunk
    Type: AWS::Logs::SubscriptionFilter
    Properties:
      DestinationArn: !Sub "{{resolve:ssm:/${Environment}/Platform/Logs/Subscription/CSLS/ARN}}"
      FilterPattern: ""
      LogGroupName: !Ref TaskLogGroup

  SessionSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: !Sub "/${AWS::StackName}/Config/Session/Secret"
      Description: !Sub Random password for the ${AWS::StackName} session secret
      GenerateSecretString:
        ExcludeLowercase: false
        ExcludeNumbers: false
        ExcludePunctuation: true
        ExcludeUppercase: false
        IncludeSpace: false
        RequireEachIncludedType: true
        PasswordLength: 32
      KmsKeyId: !GetAtt SecretsKmsKey.Arn
      Tags:
        - Key: Product
          Value: !Ref ProductTagValue
        - Key: System
          Value: !Ref SystemTagValue
        - Key: Environment
          Value: !Ref Environment
        - Key: Name
          Value: !Sub "${AWS::StackName}-SessionSecret"
        - Key: Owner
          Value: !Ref OwnerTagValue
        - Key: Source
          Value: !Ref SourceTagValue

  SecretsKmsKey:
    Type: AWS::KMS::Key
    Properties:
      Description: !Sub "KMS key used to protect secrets data in ${AWS::StackName}"
      Enabled: true
      EnableKeyRotation: true
      KeyPolicy:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub "arn:aws:iam::${AWS::AccountId}:root"
            Action:
              - kms:*
            Resource: "*"
          - Effect: Allow
            Principal:
              Service: !Sub "secretsmanager.amazonaws.com"
            Action:
              - "kms:Encrypt*"
              - "kms:Decrypt*"
              - "kms:ReEncrypt*"
              - "kms:GenerateDataKey*"
              - "kms:Describe*"
            Resource: "*"
            Condition:
              ArnLike:
                aws:SourceArn: !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:/${AWS::StackName}/Config/Session/Secret"
      Tags:
        - Key: Product
          Value: !Ref ProductTagValue
        - Key: System
          Value: !Ref SystemTagValue
        - Key: Environment
          Value: !Ref Environment
        - Key: Name
          Value: !Sub "${AWS::StackName}-SecretsKmsKey"
        - Key: Owner
          Value: !Ref OwnerTagValue
        - Key: Source
          Value: !Ref SourceTagValue

  SecretsKmsKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: !Sub "alias/${AWS::StackName}-SecretsKmsKey"
      TargetKeyId: !GetAtt SecretsKmsKey.Arn

  #
  # API Gateway
  #

  ApiGateway:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Name: !Sub "${AWS::StackName}-Api"
      ProtocolType: HTTP
      Tags:
        Product: !Ref ProductTagValue
        System: !Ref SystemTagValue
        Environment: !Ref Environment
        Name: !Sub "${AWS::StackName}-ApiGateway"
        Owner: !Ref OwnerTagValue
        Source: !Ref SourceTagValue

  ApiGatewayIntegration:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref ApiGateway
      IntegrationType: HTTP_PROXY
      ConnectionId:
        Fn::ImportValue: !Sub "${VpcStackName}-VpcLinkId"
      ConnectionType: VPC_LINK
      IntegrationMethod: ANY
      IntegrationUri: !Ref ApplicationLoadBalancerListenerHTTPS
      PayloadFormatVersion: 1.0
      Description: !Sub "API GW to ECS Container integration for ${AWS::StackName}"
      TlsConfig:
        ServerNameToVerify:
          !FindInMap [EnvironmentVariables, !Ref Environment, BASEURL]

  ApiRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref ApiGateway
      RouteKey: "ANY /{proxy+}"
      Target: !Sub "integrations/${ApiGatewayIntegration}"

  ApiDefaultStage:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      ApiId: !Ref ApiGateway
      StageName: "$default"
      AutoDeploy: true
      AccessLogSettings:
        Format: >-
          {
          "requestId":"$context.requestId",
          "requestTime":"$context.requestTime",
          "httpMethod":"$context.httpMethod",
          "domainName":"$context.domainName",
          "path": "$context.path",
          "routeKey":"$context.routeKey",
          "protocol":"$context.protocol",
          "status":"$context.status",
          "responseLength":"$context.responseLength",
          "responseLatency":"$context.responseLatency",
          "integrationStatus":"$context.integrationStatus",
          "integrationLatency":"$context.integrationLatency"
          "integrationErrorMessage":"$context.integrationErrorMessage",
          "errorMessage":"$context.error.message",
          "errorResponseType":"$context.error.responseType"
          }
        DestinationArn: !GetAtt ApiGatewayAccessLogGroup.Arn
      Tags:
        Product: !Ref ProductTagValue
        System: !Ref SystemTagValue
        Environment: !Ref Environment
        Name: !Sub "${AWS::StackName}-ApiDefaultStage"
        Owner: !Ref OwnerTagValue
        Source: !Ref SourceTagValue

  #
  # App domain
  #

  AppFrontCustomDomain:
    Type: AWS::ApiGatewayV2::DomainName
    Properties:
      DomainName: !FindInMap [EnvironmentVariables, !Ref Environment, BASEURL]
      DomainNameConfigurations:
        - CertificateArn: !Sub "{{resolve:ssm:/${Environment}/Platform/ACM/HostedZone/Certificate/Home/ARN}}"
          EndpointType: REGIONAL
          SecurityPolicy: TLS_1_2
      Tags:
        Product: !Ref ProductTagValue
        System: !Ref SystemTagValue
        Environment: !Ref Environment
        Owner: !Ref OwnerTagValue
        Source: !Ref SourceTagValue

  AppFrontApiRecord:
    Type: AWS::Route53::RecordSet
    Properties:
      Name: !FindInMap [EnvironmentVariables, !Ref Environment, BASEURL]
      Type: A
      HostedZoneId: !Sub "{{resolve:ssm:/${Environment}/Platform/Route53/HostedZone/Home}}"
      AliasTarget:
        DNSName: !GetAtt CloudFrontDistribution.DomainName
        # see https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-route53-aliastarget.html#cfn-route53-aliastarget-hostedzoneid
        HostedZoneId: "Z2FDTNDATAQYW2"
        EvaluateTargetHealth: false

  AppFrontApiMapping:
    Type: AWS::ApiGatewayV2::ApiMapping
    Properties:
      DomainName: !FindInMap [EnvironmentVariables, !Ref Environment, BASEURL]
      ApiId: !Ref ApiGateway
      Stage: !Ref ApiDefaultStage
    DependsOn:
      - AppFrontCustomDomain

  #
  # Load balancing
  #

  ApplicationLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Scheme: internal
      Type: application
      SecurityGroups:
        - !GetAtt ApplicationLoadBalancerSecurityGroup.GroupId
      Subnets:
        - Fn::ImportValue: !Sub "${VpcStackName}-ProtectedSubnetIdA"
        - Fn::ImportValue: !Sub "${VpcStackName}-ProtectedSubnetIdB"
      LoadBalancerAttributes:
        - Key: access_logs.s3.enabled
          Value: true
        - Key: access_logs.s3.bucket
          Value: !Ref AccessLogsBucket
        - Key: routing.http.drop_invalid_header_fields.enabled
          Value: true
        - Key: deletion_protection.enabled
          Value: true
        - !Ref AWS::NoValue
      Tags:
        - Key: Product
          Value: !Ref ProductTagValue
        - Key: System
          Value: !Ref SystemTagValue
        - Key: Environment
          Value: !Ref Environment
        - Key: Name
          Value: !Sub "${AWS::StackName}-ApplicationLoadBalancer"
        - Key: Owner
          Value: !Ref OwnerTagValue
        - Key: Source
          Value: !Ref SourceTagValue

  ApplicationLoadBalancerTargetGroupBlue:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckPort: !Ref ContainerPort
      HealthCheckProtocol: HTTP
      HealthCheckPath: /healthcheck
      HealthCheckIntervalSeconds: 15
      Port: !Ref ContainerPort
      Protocol: HTTP
      ProtocolVersion: HTTP1
      Matcher:
        HttpCode: "200"
      TargetType: ip
      UnhealthyThresholdCount: 2
      VpcId:
        Fn::ImportValue: !Sub "${VpcStackName}-VpcId"
      TargetGroupAttributes:
        - Key: "deregistration_delay.timeout_seconds"
          Value: "5"
      Tags:
        - Key: Product
          Value: !Ref ProductTagValue
        - Key: System
          Value: !Ref SystemTagValue
        - Key: Environment
          Value: !Ref Environment
        - Key: Name
          Value: !Sub "${AWS::StackName}-ApplicationLoadBalancerTargetGroupBlue"
        - Key: Owner
          Value: !Ref OwnerTagValue
        - Key: Source
          Value: !Ref SourceTagValue

  ApplicationLoadBalancerTargetGroupGreen:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckPort: !Ref ContainerPort
      HealthCheckProtocol: HTTP
      HealthCheckPath: /healthcheck
      HealthCheckIntervalSeconds: 30
      Port: !Ref ContainerPort
      Protocol: HTTP
      ProtocolVersion: HTTP1
      Matcher:
        HttpCode: "200"
      TargetType: ip
      UnhealthyThresholdCount: 2
      VpcId:
        Fn::ImportValue: !Sub "${VpcStackName}-VpcId"
      TargetGroupAttributes:
        - Key: "deregistration_delay.timeout_seconds"
          Value: "5"
      Tags:
        - Key: Product
          Value: !Ref ProductTagValue
        - Key: System
          Value: !Ref SystemTagValue
        - Key: Environment
          Value: !Ref Environment
        - Key: Name
          Value: !Sub "${AWS::StackName}-ApplicationLoadBalancerTargetGroupGreen"
        - Key: Owner
          Value: !Ref OwnerTagValue
        - Key: Source
          Value: !Ref SourceTagValue

  ApplicationLoadBalancerListenerHTTPS:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - TargetGroupArn: !Ref ApplicationLoadBalancerTargetGroupBlue
          Type: forward
      LoadBalancerArn: !Ref ApplicationLoadBalancer
      Port: 443
      Protocol: HTTPS
      Certificates:
        - CertificateArn: !Sub "{{resolve:ssm:/${Environment}/Platform/ACM/HostedZone/Certificate/Home/ARN}}"
      SslPolicy: "ELBSecurityPolicy-FS-1-2-Res-2020-10"

  ApplicationLoadBalancerListenerHTTP:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      # checkov:skip=CKV_AWS_2: Ignored as this is only redirects HTTP to HTTPS.
      # checkov:skip=CKV_AWS_103: Ignored as only redirects HTTP to HTTPS.
      DefaultActions:
        - Type: redirect
          RedirectConfig:
            Port: 443
            Protocol: HTTPS
            StatusCode: HTTP_301
      LoadBalancerArn: !Ref ApplicationLoadBalancer
      Port: 80
      Protocol: HTTP

  ApplicationLoadBalancerListenerRuleRobots:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
        - Type: fixed-response
          FixedResponseConfig:
            ContentType: text/plain
            MessageBody: >
              "user-agent: *"
              "disallow: /"
            StatusCode: 200
      Conditions:
        - Field: path-pattern
          PathPatternConfig:
            Values:
              - "/robots.txt"
      ListenerArn: !Ref ApplicationLoadBalancerListenerHTTPS
      Priority: 10

  BlueTaskSet:
    Type: AWS::ECS::TaskSet
    Properties:
      Cluster: !Ref ECSCluster
      LaunchType: FARGATE
      NetworkConfiguration:
        AwsVpcConfiguration:
          AssignPublicIp: DISABLED
          SecurityGroups:
            - !GetAtt ContainerServiceSecurityGroup.GroupId
          Subnets:
            - Fn::ImportValue: !Sub "${VpcStackName}-ProtectedSubnetIdA"
            - Fn::ImportValue: !Sub "${VpcStackName}-ProtectedSubnetIdB"
      PlatformVersion: 1.4.0
      Scale:
        Unit: PERCENT
        Value: 100
      Service: !Ref ContainerService
      TaskDefinition: !Ref BlueTaskDefinition
      LoadBalancers:
        - ContainerName: !Sub "${AWS::StackName}-BlueTaskDefinition"
          ContainerPort: !Ref ContainerPort
          TargetGroupArn: !Ref ApplicationLoadBalancerTargetGroupBlue

  PrimaryTaskSet:
    Type: AWS::ECS::PrimaryTaskSet
    Properties:
      Cluster: !Ref ECSCluster
      Service: !Ref ContainerService
      TaskSetId: !GetAtt
        - BlueTaskSet
        - Id

  ApplicationLoadBalancerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security Group for the Application Load Balancer
      GroupName: !Join
        - "-"
        - - !Ref AWS::StackName
          - ApplicationLoadBalancer
          - Fn::Select:
              - 4
              - Fn::Split:
                  - "-"
                  - Fn::Select:
                      - 2
                      - Fn::Split:
                          - "/"
                          - Ref: AWS::StackId
      VpcId:
        Fn::ImportValue: !Sub "${VpcStackName}-VpcId"
      Tags:
        - Key: Product
          Value: !Ref ProductTagValue
        - Key: System
          Value: !Ref SystemTagValue
        - Key: Environment
          Value: !Ref Environment
        - Key: Name
          Value: !Sub "${AWS::StackName}-ApplicationLoadBalancerSecurityGroup"
        - Key: Owner
          Value: !Ref OwnerTagValue
        - Key: Source
          Value: !Ref SourceTagValue

  ApplicationLoadBalancerSecurityGroupIngressHTTP:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !GetAtt ApplicationLoadBalancerSecurityGroup.GroupId
      CidrIp: 0.0.0.0/0
      Description: Allows HTTP traffic from anyone on port 80
      IpProtocol: tcp
      FromPort: 80
      ToPort: 80

  ApplicationLoadBalancerSecurityGroupIngressHTTPS:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !GetAtt ApplicationLoadBalancerSecurityGroup.GroupId
      CidrIp: 0.0.0.0/0
      Description: Allows HTTPS traffic from anyone on port 443
      IpProtocol: tcp
      FromPort: 443
      ToPort: 443

  ApplicationLoadBalancerSecurityGroupEgress:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      GroupId: !GetAtt ApplicationLoadBalancerSecurityGroup.GroupId
      DestinationSecurityGroupId: !GetAtt ContainerServiceSecurityGroup.GroupId
      Description: !Sub "Allow traffic to Container Service on port ${ContainerPort}"
      IpProtocol: tcp
      FromPort: !Ref ContainerPort
      ToPort: !Ref ContainerPort

  #
  # Autoscaling
  #

  ECSAutoScalingTarget:
    Type: AWS::ApplicationAutoScaling::ScalableTarget
    Properties:
      MaxCapacity: !Ref ECSClusterMaxCapacity
      MinCapacity: 3
      ResourceId: !Join
        - "/"
        - - "service"
          - !Ref ECSCluster
          - !GetAtt ContainerService.Name
      RoleARN: !Sub "arn:aws:iam::${AWS::AccountId}:role/aws-service-role/ecs.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_ECSService"
      ScalableDimension: ecs:service:DesiredCount
      ServiceNamespace: ecs

  ECSAutoScalingPolicy:
    DependsOn: ECSAutoScalingTarget
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    Properties:
      PolicyName: ECSAutoScalingPolicy
      PolicyType: TargetTrackingScaling
      ResourceId: !Join
        - "/"
        - - "service"
          - !Ref ECSCluster
          - !GetAtt ContainerService.Name
      ScalableDimension: ecs:service:DesiredCount
      ServiceNamespace: ecs
      TargetTrackingScalingPolicyConfiguration:
        PredefinedMetricSpecification:
          PredefinedMetricType: ECSServiceAverageCPUUtilization
        TargetValue: 50
        ScaleInCooldown: 420
        ScaleOutCooldown: 60

  ECSStepScaleOutPolicy:
    DependsOn: ECSAutoScalingTarget
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    Properties:
      PolicyName: ECSStepScalingOutPolicy
      PolicyType: StepScaling
      ResourceId: !Join
        - "/"
        - - "service"
          - !Ref ECSCluster
          - !GetAtt ContainerService.Name
      ScalableDimension: ecs:service:DesiredCount
      ServiceNamespace: ecs
      StepScalingPolicyConfiguration:
        AdjustmentType: PercentChangeInCapacity
        Cooldown: 120
        MinAdjustmentMagnitude: 5
        StepAdjustments:
          - MetricIntervalLowerBound: 20
            MetricIntervalUpperBound: 30
            ScalingAdjustment: 200
          - MetricIntervalLowerBound: 30
            MetricIntervalUpperBound: 35
            ScalingAdjustment: 300
          - MetricIntervalLowerBound: 35
            ScalingAdjustment: 500

  ECSStepScaleInPolicy:
    DependsOn: ECSAutoScalingTarget
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    Properties:
      PolicyName: ECSStepScalingInPolicy
      PolicyType: StepScaling
      ResourceId: !Join
        - "/"
        - - "service"
          - !Ref ECSCluster
          - !GetAtt ContainerService.Name
      ScalableDimension: ecs:service:DesiredCount
      ServiceNamespace: ecs
      StepScalingPolicyConfiguration:
        AdjustmentType: PercentChangeInCapacity
        Cooldown: 420
        StepAdjustments:
          - MetricIntervalUpperBound: -40
            ScalingAdjustment: -50

  ECSStepScaleOutAlarm:
    DependsOn: ECSAutoScalingTarget
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Ref ECSStepScaleOutPolicy
      AlarmDescription: "ECSClusterOver60PercentCPU"
      ComparisonOperator: "GreaterThanThreshold"
      DatapointsToAlarm: "2"
      Dimensions:
        - Name: ClusterName
          Value: !Ref ECSCluster
        - Name: ServiceName
          Value: !GetAtt ContainerService.Name
      Unit: "Percent"
      EvaluationPeriods: "2"
      MetricName: "CPUUtilization"
      Namespace: "AWS/ECS"
      Statistic: "Average"
      Period: "60"
      Threshold: "60"

  ECSStepScaleInAlarm:
    DependsOn: ECSAutoScalingTarget
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Ref ECSStepScaleInPolicy
      AlarmDescription: "ECSClusterUnder60PercentCPU"
      ComparisonOperator: "LessThanThreshold"
      DatapointsToAlarm: "5"
      Dimensions:
        - Name: ClusterName
          Value: !Ref ECSCluster
        - Name: ServiceName
          Value: !GetAtt ContainerService.Name
      Unit: "Percent"
      EvaluationPeriods: "5"
      MetricName: "CPUUtilization"
      Namespace: "AWS/ECS"
      Statistic: "Average"
      Period: "60"
      Threshold: "60"

  #
  # Logging
  #

  ApiGatewayAccessLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/apigateway/${AWS::StackName}/access"
      RetentionInDays: 30
      KmsKeyId: !GetAtt LoggingKmsKey.Arn
      Tags:
        - Key: Product
          Value: !Ref ProductTagValue
        - Key: System
          Value: !Ref SystemTagValue
        - Key: Environment
          Value: !Ref Environment
        - Key: Name
          Value: ApiGatewayAccessLogGroup
        - Key: Owner
          Value: !Ref OwnerTagValue
        - Key: Source
          Value: !Ref SourceTagValue

  ApiGatewayAccessLogGroupCSLSSubscription:
    Condition: ExportLogsToSplunk
    Type: AWS::Logs::SubscriptionFilter
    Properties:
      DestinationArn: !Sub "{{resolve:ssm:/${Environment}/Platform/Logs/Subscription/CSLS/ARN}}"
      FilterPattern: ""
      LogGroupName: !Ref ApiGatewayAccessLogGroup

  LoggingKmsKey:
    Type: AWS::KMS::Key
    Properties:
      EnableKeyRotation: true
      KeyPolicy:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub "arn:aws:iam::${AWS::AccountId}:root"
            Action:
              - kms:*
            Resource: "*"
          - Effect: Allow
            Principal:
              Service: !Sub "logs.${AWS::Region}.amazonaws.com"
            Action:
              - "kms:Encrypt*"
              - "kms:Decrypt*"
              - "kms:ReEncrypt*"
              - "kms:GenerateDataKey*"
              - "kms:Describe*"
            Resource: "*"
            Condition:
              ArnLike:
                "kms:EncryptionContext:aws:logs:arn":
                  - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/ecs/${AWS::StackName}/server"
                  - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/apigateway/${AWS::StackName}/access"
      Tags:
        - Key: Product
          Value: !Ref ProductTagValue
        - Key: System
          Value: !Ref SystemTagValue
        - Key: Environment
          Value: !Ref Environment
        - Key: Name
          Value: !Sub "${AWS::StackName}-LoggingKmsKey"
        - Key: Owner
          Value: !Ref OwnerTagValue
        - Key: Source
          Value: !Ref SourceTagValue

  LoggingKmsKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: !Sub "alias/${AWS::StackName}-LoggingKmsKey"
      TargetKeyId: !GetAtt LoggingKmsKey.Arn

  AccessLogsBucket:
    Type: AWS::S3::Bucket
    Properties:
      # checkov:skip=CKV_AWS_18:This is the access logs bucket. It should not log itself.
      BucketName: !Join
        - "-"
        - - !Ref AWS::StackName
          - logs
          - Fn::Select:
              - 4
              - Fn::Split:
                  - "-"
                  - Fn::Select:
                      - 2
                      - Fn::Split:
                          - /
                          - Ref: AWS::StackId
      VersioningConfiguration:
        Status: Enabled
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-AccessLogs"
        - Key: Product
          Value: !Ref ProductTagValue
        - Key: System
          Value: !Ref SystemTagValue
        - Key: Environment
          Value: !Ref Environment
        - Key: Owner
          Value: !Ref OwnerTagValue
        - Key: Source
          Value: !Ref SourceTagValue
        - Key: CheckovRulesToSkip
          Value: CKV_AWS_18

  AccessLogsBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref AccessLogsBucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: AllowLoadBalancerToLogToS3
            Effect: Allow
            Principal:
              AWS: !Sub
                - "arn:aws:iam::${ElbAccountId}:root"
                - ElbAccountId:
                    !FindInMap [
                      ElasticLoadBalancerAccountIds,
                      !Ref AWS::Region,
                      AccountId,
                    ]
            Action:
              - s3:PutObject
            Resource: !Sub "${AccessLogsBucket.Arn}/AWSLogs/${AWS::AccountId}/*"
            Condition:
              Bool:
                "aws:SecureTransport": true
          - Sid: AllowAwsLogDeliveryToLogToS3
            Effect: Allow
            Principal:
              Service: delivery.logs.amazonaws.com
            Action:
              - s3:PutObject
            Resource: !Sub "${AccessLogsBucket.Arn}/AWSLogs/${AWS::AccountId}/*"
            Condition:
              StringEquals:
                "s3:x-amz-acl": bucket-owner-full-control
                "aws:SourceAccount": !Ref AWS::AccountId
              Bool:
                "aws:SecureTransport": true
          - Sid: AllowAwsLogDeliveryToReadBucketAcl
            Effect: Allow
            Principal:
              Service: delivery.logs.amazonaws.com
            Action:
              - s3:GetBucketAcl
            Resource: !GetAtt AccessLogsBucket.Arn
            Condition:
              StringEquals:
                "aws:SourceAccount": !Ref AWS::AccountId
              Bool:
                "aws:SecureTransport": true

  #
  # CloudFront Distribution
  #

  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    DependsOn: CloudFrontLogsBucket
    Properties:
      DistributionConfig:
        Aliases:
          - !FindInMap [EnvironmentVariables, !Ref Environment, BASEURL]
        CNAMEs:
          - !FindInMap [EnvironmentVariables, !Ref Environment, BASEURL]
        Comment: !Sub "CloudFront Distribution resource for the ${AWS::StackName} application"
        DefaultCacheBehavior:
          AllowedMethods:
            - GET
            - HEAD
            - OPTIONS
            - PUT
            - PATCH
            - POST
            - DELETE
          # CachingDisabled managed cache policy id
          # see https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-managed-cache-policies.html#managed-cache-policies-list
          CachePolicyId: 4135ea2d-6df8-44a3-9df3-4b5a84be39ad
          OriginRequestPolicyId: !GetAtt CloudFrontOriginRequestPolicy.Id
          Compress: false
          MinTTL: 0
          TargetOriginId:
            !FindInMap [EnvironmentVariables, !Ref Environment, BASEURL]
          ViewerProtocolPolicy: redirect-to-https
          FunctionAssociations:
            - EventType: viewer-request
              FunctionARN: !Sub "arn:${AWS::Partition}:cloudfront::${AWS::AccountId}:function/TICFFraudHeadersFunction"
        Enabled: true
        HttpVersion: "http2"
        Logging:
          Bucket: !Sub "${CloudFrontLogsBucket}.s3.amazonaws.com"
        Origins:
          - ConnectionAttempts: 3
            ConnectionTimeout: 10
            DomainName: !Sub "${ApiGateway}.execute-api.${AWS::Region}.amazonaws.com"
            Id: !FindInMap [EnvironmentVariables, !Ref Environment, BASEURL]
            CustomOriginConfig:
              HTTPSPort: 443
              OriginKeepaliveTimeout: 5
              OriginProtocolPolicy: https-only
              OriginReadTimeout: 30
              OriginSSLProtocols:
                - TLSv1.2
        ViewerCertificate:
          AcmCertificateArn: !Sub "{{resolve:ssm:/${Environment}/Platform/ACM/Global/Certificate/Home/ARN}}"
          MinimumProtocolVersion: TLSv1.2_2021
          SslSupportMethod: sni-only
        WebACLId: !Sub "{{resolve:ssm:/${Environment}/Platform/WAF/Global/ACL/ARN}}"
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-CloudFrontDistribution"
        - Key: Product
          Value: !Ref ProductTagValue
        - Key: System
          Value: !Ref SystemTagValue
        - Key: Environment
          Value: !Ref Environment
        - Key: Owner
          Value: !Ref OwnerTagValue
        - Key: Source
          Value: !Ref SourceTagValue

  CloudFrontOriginRequestPolicy:
    Type: AWS::CloudFront::OriginRequestPolicy
    Properties:
      OriginRequestPolicyConfig:
        Comment: String
        CookiesConfig:
          CookieBehavior: all
        HeadersConfig:
          HeaderBehavior: allViewer
        Name: !Sub "${AWS::StackName}-OriginRequestPolicy"
        QueryStringsConfig:
          QueryStringBehavior: all

  CloudFrontLogsBucket:
    Type: AWS::S3::Bucket
    Properties:
      # checkov:skip=CKV_AWS_18:This is the access logs bucket. It should not log itself.
      OwnershipControls:
        Rules:
          - ObjectOwnership: BucketOwnerPreferred
      BucketName: !Join
        - "-"
        - - !Ref AWS::StackName
          - cloudfront
          - Fn::Select:
              - 4
              - Fn::Split:
                  - "-"
                  - Fn::Select:
                      - 2
                      - Fn::Split:
                          - /
                          - Ref: AWS::StackId
      VersioningConfiguration:
        Status: Enabled
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-AccessLogs"
        - Key: Product
          Value: !Ref ProductTagValue
        - Key: System
          Value: !Ref SystemTagValue
        - Key: Environment
          Value: !Ref Environment
        - Key: Owner
          Value: !Ref OwnerTagValue
        - Key: Source
          Value: !Ref SourceTagValue
        - Key: CheckovRulesToSkip
          Value: CKV_AWS_18

  CloudFrontLogsBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref CloudFrontLogsBucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: AllowAwsLogDeliveryToLogToS3
            Effect: Allow
            Principal:
              Service: delivery.logs.amazonaws.com
            Action:
              - s3:PutObject
            Resource: !Sub "${CloudFrontLogsBucket.Arn}/AWSLogs/${AWS::AccountId}/*"
            Condition:
              StringEquals:
                "s3:x-amz-acl": bucket-owner-full-control
                "aws:SourceAccount": !Ref AWS::AccountId
              Bool:
                "aws:SecureTransport": true
          - Sid: AllowAwsLogDeliveryToReadBucketAcl
            Effect: Allow
            Principal:
              Service: delivery.logs.amazonaws.com
            Action:
              - s3:GetBucketAcl
            Resource: !GetAtt CloudFrontLogsBucket.Arn
            Condition:
              StringEquals:
                "aws:SourceAccount": !Ref AWS::AccountId
              Bool:
                "aws:SecureTransport": true

  #
  # Metrics and Alarms
  #

  # API Gateway Alarms

  # 4xx Status Code
  ApiGateway4xxStatusAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub "${AWS::StackName}-ApiGateway4xxStatusAlarm"
      AlarmDescription: "Trigger the alarm if errorThreshold exceeds 1% with the minimum of 10 invocations in 2 out of the last 5 minutes"
      ActionsEnabled: false
      AlarmActions:
        - !Sub "{{resolve:ssm:/${AlertingStackName}/SNS/HighAlertNotificationTopic/ARN}}"
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 5
      DatapointsToAlarm: 2
      Threshold: 1
      TreatMissingData: missing
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF(invocations<10,0,errorPercentage)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: ApiId
                  Value: !Ref ApiGateway
            Period: 60
            Stat: Sum
        - Id: errorPercentage
          Label: errorPercentage
          ReturnData: false
          Expression: (error/invocations)*100
        - Id: error
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 4xx
              Dimensions:
                - Name: ApiId
                  Value: !Ref ApiGateway
            Period: 60
            Stat: Sum

  # 5xx Status Code
  # Alarm should activate when the number of 5xx errors exceeds 5 in the current 24-hour period.
  # Sample every 300 seconds (Period) and check the 288 preceeding sample persiods to cover the last 24 hours
  # 288 * 300 seconds = 86,400 seconds = 24 hours.
  ApiGateway5xxStatusAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub "${AWS::StackName}-ApiGateway5xxStatusAlarm"
      AlarmDescription: "Activate when 5 5xx events detected in the last 24 hours.  The Alarm will be raised within 300 seconds of the 5xx being raised."
      ActionsEnabled: true
      AlarmActions:
        - !Sub "{{resolve:ssm:/${AlertingStackName}/SNS/HighAlertNotificationTopic/ARN}}"
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 288
      DatapointsToAlarm: 288
      Threshold: 5
      TreatMissingData: missing
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF(invocations<10,0,errorPercentage)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: ApiId
                  Value: !Ref ApiGateway
            Period: 300
            Stat: Sum
        - Id: errorPercentage
          Label: errorPercentage
          ReturnData: false
          Expression: (error/invocations)*100
        - Id: error
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 5xx
              Dimensions:
                - Name: ApiId
                  Value: !Ref ApiGateway
            Period: 300
            Stat: Sum

  # Latency
  ApiGatewayLatencyAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub "${AWS::StackName}-ApiGatewayLatencyAlarm"
      AlarmDescription: "Trigger the alarm if response latency exceeds 2.5 seconds with the minimum of 10 invocations in 2 out of the last 5 minutes"
      ActionsEnabled: false
      AlarmActions:
        - !Sub "{{resolve:ssm:/${AlertingStackName}/SNS/LowAlertNotificationTopic/ARN}}"
      ComparisonOperator: GreaterThanThreshold
      EvaluationPeriods: 5
      DatapointsToAlarm: 2
      Threshold: 2500
      TreatMissingData: missing
      Metrics:
        - Id: safeLatency
          Label: safeLatency
          ReturnData: true
          Expression: IF(invocations<10,0,maxLatency)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: ApiId
                  Value: !Ref ApiGateway
            Period: 60
            Stat: Sum
        - Id: maxLatency
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Latency
              Dimensions:
                - Name: ApiId
                  Value: !Ref ApiGateway
            Period: 60
            Stat: Maximum
  #
  # CloudWatch Dashboard
  #

  AMFCloudWatchDashboard:
    Type: AWS::CloudWatch::Dashboard
    Properties:
      DashboardBody: !Sub >-
        {
         "start": "-PT6H",
         "periodOverride": "inherit",
         "widgets": [ {
           "height": 6,
           "width": 12,
           "y": 0,
           "x": 0,
           "type": "metric",
           "properties": {
             "title": "API Gateway 4xx, 5xx Errors and Total Invocations",
             "region": "${AWS::Region}",
             "metrics": [
               [ "AWS/ApiGateway", "4xx", "ApiId", "${ApiGateway}" ],
               [ "AWS/ApiGateway", "5xx", "ApiId", "${ApiGateway}" ],
               [ "AWS/ApiGateway", "Count", "ApiId", "${ApiGateway}" ]
             ],
             "view": "timeSeries",
             "stacked": false,
             "stat": "Sum",
             "period": 60
           }
         },
           {
             "height": 6,
             "width": 12,
             "y": 0,
             "x": 12,
             "type": "metric",
             "properties": {
               "title": "API Gateway Latency",
               "region": "${AWS::Region}",
               "metrics": [
                 [ "AWS/ApiGateway", "Latency", "ApiId", "${ApiGateway}" ]
               ],
               "view": "timeSeries",
               "stacked": false,
               "stat": "Maximum",
               "period": 60
             }
           },
           {
             "height": 6,
             "width": 12,
             "y": 6,
             "x": 12,
             "type": "metric",
             "properties": {
               "metrics": [
                 [ "AWS/ApiGateway", "Count", "ApiId", "${ApiGateway}",
                   {
                     "stat": "Sum", "label": "API Request Count"
                   }
                 ],
                 [ "AWS/ECS", "CPUUtilization", "ClusterName", "${ECSCluster}",
                   "ServiceName", "${ContainerService.Name}", { "label": "ECS CPUUtilization" }
                 ],
                 [ "AWS/ECS", "MemoryUtilization", "ClusterName", "${ECSCluster}",
                   "ServiceName", "${ContainerService.Name}", { "label": "ECS MemoryUtilization" }
                 ]
               ],
               "title": "ECS Auto Scaling (Production Only)",
               "region": "${AWS::Region}",
               "view": "timeSeries",
               "stacked": false,
               "stat": "Maximum",
               "period": 60
             }
           },
           {
             "height": 6,
             "width": 12,
             "y": 0,
             "x": 12,
             "type": "metric",
             "properties": {
               "title": "ECS Running Task Count, Desired And Pending Task Count",
               "region": "${AWS::Region}",
               "metrics": [
                 [ "ECS/ContainerInsights", "RunningTaskCount", "ClusterName", "${ECSCluster}",
                   "ServiceName", "${ContainerService.Name}"
                 ],
                 [ "ECS/ContainerInsights", "DesiredTaskCount", "ClusterName", "${ECSCluster}",
                   "ServiceName", "${ContainerService.Name}"
                 ],
                 [ "ECS/ContainerInsights", "PendingTaskCount", "ClusterName", "${ECSCluster}",
                     "ServiceName", "${ContainerService.Name}"
                   ]
               ],
               "view": "timeSeries",
               "stacked": false,
               "stat": "Sum",
               "period": 60
             }
           },
            {
              "height": 6,
              "width": 12,
              "y": 0,
              "x": 12,
              "type": "metric",
              "properties": {
                "title": "ECS Cluster Service Count",
                "region": "${AWS::Region}",
                "metrics": [
                  [ "ECS/ContainerInsights", "ServiceCount", "ClusterName", "${ECSCluster}" ]
                ],
                "view": "timeSeries",
                "stacked": false,
                "stat": "Average",
                "period": 60
              }
            },
           {
             "height": 6,
             "width": 12,
             "y": 0,
             "x": 12,
             "type": "metric",
             "properties": {
               "title": "Number Of Requests Made To ALB vs Response Time",
               "region": "${AWS::Region}",
               "metrics": [
                 [ "AWS/ApplicationELB", "RequestCount", "LoadBalancer", "${ApplicationLoadBalancer.LoadBalancerFullName}", { "yAxis": "right" } ],
                 [ "AWS/ApplicationELB", "TargetResponseTime", "LoadBalancer", "${ApplicationLoadBalancer.LoadBalancerFullName}",
                   {
                     "stat": "Average"
                   }
                 ]
               ],
               "view": "timeSeries",
               "stacked": false,
               "stat": "Sum",
               "period": 60
             }
           },
           {
             "height": 6,
             "width": 12,
             "y": 0,
             "x": 12,
             "type": "metric",
             "properties": {
               "title": "ALB Endpoint Functionality",
               "region": "${AWS::Region}",
               "metrics": [
                 [ "AWS/ApplicationELB", "ActiveConnectionCount", "LoadBalancer", "${ApplicationLoadBalancer.LoadBalancerFullName}",{ "yAxis": "right" } ],
                 [ "AWS/ApplicationELB", "ProcessedBytes", "LoadBalancer", "${ApplicationLoadBalancer.LoadBalancerFullName}" ]
               ],
               "view": "timeSeries",
               "stacked": false,
               "stat": "Sum",
               "period": 60
             }
           },
           {
             "height": 6,
             "width": 12,
             "y": 0,
             "x": 12,
             "type": "metric",
             "properties": {
               "title": "ALB 502,503 And 504 Errors",
               "region": "${AWS::Region}",
               "metrics": [
                 [ "AWS/ApplicationELB", "HTTPCode_ELB_502_Count", "LoadBalancer", "${ApplicationLoadBalancer.LoadBalancerFullName}" ],
                 [ "AWS/ApplicationELB", "HTTPCode_ELB_503_Count", "LoadBalancer", "${ApplicationLoadBalancer.LoadBalancerFullName}" ],
                 [ "AWS/ApplicationELB", "HTTPCode_ELB_504_Count", "LoadBalancer", "${ApplicationLoadBalancer.LoadBalancerFullName}" ]
               ],
               "view": "timeSeries",
               "stacked": false,
               "stat": "Sum",
               "period": 60
             }
           },
           {
             "height": 6,
             "width": 12,
             "y": 0,
             "x": 12,
             "type": "metric",
             "properties": {
               "title": " ALB Target Health Check",
               "region": "${AWS::Region}",
               "metrics": [
                 [ "AWS/ApplicationELB", "HealthyHostCount", "TargetGroup","${ApplicationLoadBalancerTargetGroupBlue.TargetGroupFullName}", "LoadBalancer", "${ApplicationLoadBalancer.LoadBalancerFullName}" ],
                 [ "AWS/ApplicationELB", "UnHealthyHostCount","TargetGroup","${ApplicationLoadBalancerTargetGroupBlue.TargetGroupFullName}", "LoadBalancer", "${ApplicationLoadBalancer.LoadBalancerFullName}" ]
               ],
               "view": "timeSeries",
               "stacked": false,
               "stat": "Sum",
               "period": 60
             }
           },
           {
             "height": 6,
             "width": 12,
             "y": 0,
             "x": 12,
             "type": "metric",
             "properties": {
               "title": "Unsuccessful Connections Between Load Balancer And Host",
               "region": "${AWS::Region}",
               "metrics": [
                 [ "AWS/ApplicationELB", "TargetConnectionErrorCount", "LoadBalancer", "${ApplicationLoadBalancer.LoadBalancerFullName}" ]
               ],
               "view": "timeSeries",
               "stacked": false,
               "stat": "Sum",
               "period": 60
             }
           },
           {
             "height": 6,
             "width": 12,
             "y": 0,
             "x": 12,
             "type": "metric",
             "properties": {
               "title": "DynamoDB Read And Write Capacity",
               "region": "${AWS::Region}",
               "metrics": [
                 [ "AWS/DynamoDB", "ConsumedReadCapacityUnits", "TableName", "${SessionsDynamoDB}" ],
                 [ "AWS/DynamoDB", "ConsumedWriteCapacityUnits", "TableName", "${SessionsDynamoDB}" ]
               ],
               "view": "timeSeries",
               "stacked": false,
               "stat": "Sum",
               "period": 60
             }
           },
            {
                "height": 6,
                "width": 12,
                "y": 0,
                "x": 12,
                "type": "metric",
                "properties": {
                  "title": "DynamoDB Average Latency",
                  "region": "${AWS::Region}",
                  "metrics": [
                    [ "AWS/DynamoDB", "SuccessfulRequestLatency", "TableName", "${SessionsDynamoDB}", "Operation", "GetItem"],
                    [ "AWS/DynamoDB", "SuccessfulRequestLatency", "TableName", "${SessionsDynamoDB}", "Operation", "PutItem"],
                    [ "AWS/DynamoDB", "SuccessfulRequestLatency", "TableName", "${SessionsDynamoDB}", "Operation", "UpdateItem"],
                    [ "AWS/DynamoDB", "SuccessfulRequestLatency", "TableName", "${SessionsDynamoDB}", "Operation", "DeleteItem"]
                  ],
                  "view": "timeSeries",
                  "stacked": false,
                  "stat": "Average",
                  "period": 60
                }
              }
           ]
         }
      DashboardName: !Sub "${AWS::StackName}-AMF"

  #
  # DynamoDB
  #

  SessionsDynamoDB:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub ${AWS::StackName}-SessionStore
      AttributeDefinitions:
        - AttributeName: "id"
          AttributeType: "S"
        - AttributeName: "user_id" # must match USER_IDENTIFIER_IDX_ATTRIBUTE in ../src/utils/session-store.ts
          AttributeType: "S"
      KeySchema:
        - AttributeName: "id"
          KeyType: "HASH"
      TimeToLiveSpecification:
        AttributeName: "expires"
        Enabled: true
      BillingMode: PAY_PER_REQUEST
      ContributorInsightsSpecification:
        Enabled: true
      # checkov:skip=CKV_AWS_28: Ignored enable Dynamodb point in time recovery as it is only a short-term cache
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: false
      GlobalSecondaryIndexes:
        - IndexName: "users-sessions" # must match index name in ../src/utils/session-store.ts
          KeySchema:
            - AttributeName: "user_id" # must match USER_IDENTIFIER_IDX_ATTRIBUTE in ../src/utils/session-store.ts
              KeyType: "HASH"
          Projection:
            ProjectionType: KEYS_ONLY
      SSESpecification:
        KMSMasterKeyId: !Ref DynamoDBKmsKey
        SSEEnabled: true
        SSEType: KMS
      TableClass: STANDARD
      Tags:
        - Key: Product
          Value: !Ref ProductTagValue
        - Key: System
          Value: !Ref SystemTagValue
        - Key: Environment
          Value: !Ref Environment
        - Key: Owner
          Value: !Ref OwnerTagValue
        - Key: Source
          Value: !Ref SourceTagValue
        - Key: CheckovRulesToSkip
          Value: CKV_AWS_28

  DynamoDBKmsKey:
    Type: AWS::KMS::Key
    Properties:
      Description: !Sub "KMS key used to protect DynamoDB data in ${AWS::StackName}"
      Enabled: true
      EnableKeyRotation: true
      KeyPolicy:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub "arn:aws:iam::${AWS::AccountId}:root"
            Action:
              - kms:*
            Resource: "*"
          - Effect: Allow
            Principal:
              Service: dynamodb.amazonaws.com
            Action:
              - kms:Encrypt*
              - kms:Decrypt*
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
              - kms:Describe*
            Resource: !Sub "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${AWS::StackName}-SessionStore"
      Tags:
        - Key: Product
          Value: !Ref ProductTagValue
        - Key: System
          Value: !Ref SystemTagValue
        - Key: Environment
          Value: !Ref Environment
        - Key: Name
          Value: !Sub "${AWS::StackName}-DynamoDBKmsKey"
        - Key: Owner
          Value: !Ref OwnerTagValue
        - Key: Source
          Value: !Ref SourceTagValue

  DynamoDBKmsKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: !Sub "alias/${AWS::StackName}-DynamoDBKmsKey"
      TargetKeyId: !GetAtt DynamoDBKmsKey.Arn

  #
  # Outputs
  #

Outputs:
  ApiGatewayEndpoint:
    Description: The URL for the application's API Gateway.
    Value: !GetAtt ApiGateway.ApiEndpoint
  CloudFrontDistributionEndpoint:
    Description: The Application URL.
    Value: !FindInMap [EnvironmentVariables, !Ref Environment, BASEURL]
