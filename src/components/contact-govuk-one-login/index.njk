{% extends "common/layout/base-page.njk" %}
{% from "govuk/components/inset-text/macro.njk" import govukInsetText %}
{% set pageTitleName = 'pages.contact.title' | translate %}
{% set hideAccountNavigation = true %}
{% set languageToggle = true %}
{% set secondaryContactMethodEnabled = contactPhoneEnabled or contactWebchatEnabled %}
{% set emailBlock %}
  <section>
    {% if secondaryContactMethodEnabled %}
      <h3 class="govuk-heading-m">{{'pages.contact.section3.email.heading' | translate }}</h3>
    {% endif %}
    {% set emailParagraphs =  'pages.contact.section3.email.paragraphs' | translate({ returnObjects: true }) %}
    {% for paragraph in emailParagraphs %}
      <p class="govuk-body">{{ paragraph | safe | replace('[emailServiceLinkHref]', contactEmailServiceUrl | translate ) }}</p>
    {% endfor %}
  </section>
{% endset %}

{% set refCodeBlock %}
  {% set refCodeBlockParagraphs = 'pages.contact.refCodeBlock.paragraphsWebchat' | translate({ returnObjects: true }) if contactWebchatEnabled else 'pages.contact.refCodeBlock.paragraphsNoWebchat' | translate({ returnObjects: true }) %}
  {% for paragraph in refCodeBlockParagraphs %}
    <p class="govuk-body">{{ paragraph }}</p>
  {% endfor %}

  <p class="govuk-body contact-reference">
    {{'pages.contact.refCodeBlock.refCode' | translate}}
    <strong class="contact-reference__code">{{ referenceCode }}</strong>
  </p>
{% endset %}

{% set phoneBlock %}
  {% set phoneParagraphs1 = 'pages.contact.section3.phone.paragraphs' | translate({ returnObjects: true }) %}
  {% set phoneParagraphs2 = 'pages.contact.section3.phone.paragraphs2' | translate({ returnObjects: true }) %}
  {% set insetTextHtml %}
    {% set insetTextParagraphs =  'pages.contact.section3.phone.insetText.paragraphs' | translate({ returnObjects: true }) %}
    {% for paragraph in insetTextParagraphs %}
      <p class="govuk-body">{{ paragraph | safe }}</p>
    {% endfor %}
  {% endset %}

  <section>
    <h3 class="govuk-heading-m">{{'pages.contact.section3.phone.heading' | translate}}</h3>
    {% if not contactWebchatEnabled %}
      {{refCodeBlock | safe }}
    {% else %}
      {% for paragraph in phoneParagraphs1 %}
        <p class="govuk-body">{{ paragraph }}</p>
      {% endfor %}
    {% endif %}

    {{ govukInsetText({
      html: insetTextHtml
    }) }}

    {% for paragraph in phoneParagraphs2 %}
      <p class="govuk-body">{{ paragraph | safe | replace('[callChargesLinkHref]', 'pages.contact.section3.phone.callChargesLinkHref' | translate ) }}</p>
    {% endfor %}
  </section>
{% endset %}


{# START page content #}

{% block pageContent %}

<h1 class="govuk-heading-xl">{{'pages.contact.header' | translate}}</h1>

{% if not showContactGuidance and not contactWebchatEnabled and not contactPhoneEnabled %}
  {# if everything is disabled, only show the contact form option #}
  {{ emailBlock | safe }}
{% else %}
  {% if showContactGuidance %} 
    <section>
      {% set section1Paragraphs =  'pages.contact.section1.paragraphs' | translate({ returnObjects: true }) %}
      {% set section1Links =  'pages.contact.section1.links' | translate({ returnObjects: true }) %}
      <h2 class="govuk-heading-l">{{'pages.contact.section1.heading' | translate}}</h2>
      {% for paragraph in section1Paragraphs %}
        <p class="govuk-body">{{ paragraph }}</p>
      {% endfor %}
      {% if section1Links.length %}
      <ul class="govuk-list govuk-list--bullet">
        {% for link in section1Links %}
          <li><a class="govuk-link" href="{{link["href"]}}">{{link["text"]}}</a></li>
        {% endfor %}
      </ul>
      {% endif %}
    </section>
    <hr class="govuk-section-break govuk-section-break--m">
  {% endif %}

  {% if contactPhoneEnabled and contactWebchatEnabled %}
    <section>
      <h2 class="govuk-heading-l">{{'pages.contact.section2.heading' | translate}}</h2>
      {{ refCodeBlock | safe }}
    </section>
    <hr class="govuk-section-break govuk-section-break--m">
  {% endif %}

  <section>
    <h2 class="govuk-heading-l">{% if secondaryContactMethodEnabled %}{{'pages.contact.section3.headingMany' | translate}}{% else %}{{'pages.contact.section3.headingOne' | translate }}{% endif %}</h2>
    {% if contactWebchatEnabled %}
      <section>
        {% set webchatParagraphs =  'pages.contact.section3.webchat.paragraphs' | translate({ returnObjects: true }) %}

        <h3 class="govuk-heading-m">{{'pages.contact.section3.webchat.heading' | translate}}</h3>

        {% for paragraph in webchatParagraphs %}
          <p class="govuk-body">{{ paragraph | safe  }}</p>
        {% endfor %}
        <p class="govuk-body"><button type="button" class="launch-webchat-link" data-launch-webchat hidden>{{ 'pages.contact.section3.webchat.linkText' | translate }}</button></p>
      </section>
    {% endif %}

    {% if contactPhoneEnabled %}
      {{ phoneBlock | safe }}
    {% endif %}

    {{ emailBlock | safe }}
  </section>
  {% if secondaryContactMethodEnabled %}
    {# privacy notice section should only be visible if webchat and/or phone contact are enabled #}
    <hr class="govuk-section-break govuk-section-break--m">
    <section>
      {% set section4Paragraphs =  'pages.contact.section4.paragraphs' | translate({ returnObjects: true }) %}
      <h2 class="govuk-heading-l">{{'pages.contact.section4.heading' | translate}}</h2>
      {% for paragraph in section4Paragraphs %}
        <p class="govuk-body">{{ paragraph | safe }}</p>
      {% endfor %}
    </section>
  {% endif %}
{% endif %}

{% if contactWebchatEnabled %}
  <script id="smartagent" type="module" defer 
    src="{{ webchatSource }}" 
    data-company="hgsgds" data-brand="hgsgds"
    nonce="{{ nonce }}">
  </script>
  <script type="text/javascript" nonce='{{scriptNonce}}'>
    var launchWebchatButton = document.querySelector("[data-launch-webchat]");

    launchWebchatButton.addEventListener("click", function() {
      if (window._sa) {
        window._sa.openChat();
      }
    });

    function waitForSaEvents(){
      // if saEvents does not exist, chat has not loaded yet
      if(typeof window.saEvents !== "undefined"){
        window.saEvents.subscribe(function (event) {
          if (event.type === "CHAT_LOADED") {
            // as soon as a CHAT_LOADED event is received from the webchat, make the "Use webchat" toggle visible and stop listening for chat events
            launchWebchatButton.removeAttribute('hidden');
            clearInterval(webchatInterval);
            clearTimeout(cancelInterval);
          }
        });
      }
    }

    // the webchat script injects other scripts and assets into the page
    // therefore the "saEvents" object is not immediately available to subscribe to
    // this checks whether "saEvents" is available every 200ms 
    var webchatInterval = setInterval(waitForSaEvents, 200);
    var cancelInterval = setTimeout(function(){
      // if webchat events still unavailable after 10s, clear the interval
      clearInterval(webchatInterval);
    }, 10000)
  </script>
{% endif %}
{% endblock %}
